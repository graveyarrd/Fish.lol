--// affection.cc custom version (Prediction + Anti-Ground + Auto Unlock + HitPart + AirShoot)
print("Affection.cc | Custom Version Loaded")

--// SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

--// CONFIG
local Config = {
    Prediction = 0.125,                           -- Adjust based on ping
    AntiGroundOffset = Vector3.new(0, 2.5, 0),   -- Add height if target is grounded
    ToggleKey = Enum.KeyCode.Q,                  -- Keybind to toggle camlock
    HitPart = "HumanoidRootPart",                -- "HumanoidRootPart" or "Head"
    AirShoot = true                              -- Auto-fire when target is airborne
}

--// UI (Minimal Button + Drag)
local gui = Instance.new("ScreenGui")
gui.Name = "AffectionLockUI"
gui.Parent = game.CoreGui
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Frame = Instance.new("Frame")
Frame.Parent = gui
Frame.BackgroundTransparency = 1
Frame.Position = UDim2.new(0.4, 0, 0.4, 0)
Frame.Size = UDim2.new(0, 85, 0, 85)
Frame.Active = true

local TextButton = Instance.new("TextButton")
TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
TextButton.BackgroundTransparency = 0.3
TextButton.BorderSizePixel = 0
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Text = ""
TextButton.AutoButtonColor = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = TextButton

-- Dragging
local dragging, dragStart, startPos
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- Notification Function
local function showNotification(text)
    game.StarterGui:SetCore("SendNotification", {
        Title = "Affection.cc",
        Text = text,
        Duration = 1.5
    })
end

showNotification("Affection.cc Loaded")

-- Variables
local camlockEnabled = false
local lockedPlayer = nil

-- Get Closest Player
local function getClosestPlayer()
    local closest, shortest = nil, math.huge
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild(Config.HitPart) then
            local pos, onScreen = Camera:WorldToViewportPoint(p.Character[Config.HitPart].Position)
            if onScreen then
                local dist = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude
                if dist < 150 and dist < shortest then
                    shortest = dist
                    closest = p
                end
            end
        end
    end
    return closest
end

-- Toggle Camlock
local function toggleCamlock()
    if not camlockEnabled then
        local target = getClosestPlayer()
        if target then
            camlockEnabled = true
            lockedPlayer = target
            showNotification("Locked onto " .. target.Name)
        else
            showNotification("No player found")
        end
    else
        camlockEnabled = false
        lockedPlayer = nil
        showNotification("Lock Disabled")
    end
end

-- Button Click
TextButton.MouseButton1Click:Connect(toggleCamlock)

-- Keybind
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Config.ToggleKey then
        toggleCamlock()
    end
end)

-- Auto-Unlock on Player Leave
Players.PlayerRemoving:Connect(function(player)
    if player == lockedPlayer then
        camlockEnabled = false
        lockedPlayer = nil
        showNotification("Target left, lock disabled")
    end
end)

-- Respawn Reset
LocalPlayer.CharacterAdded:Connect(function()
    camlockEnabled = false
    lockedPlayer = nil
    showNotification("You respawned, lock disabled")
end)

-- RenderStepped Loop
RunService.RenderStepped:Connect(function()
    if camlockEnabled and lockedPlayer and lockedPlayer.Character then
        local humanoid = lockedPlayer.Character:FindFirstChildOfClass("Humanoid")
        local hitPart = lockedPlayer.Character:FindFirstChild(Config.HitPart)
        local rootVel = hitPart and hitPart.Velocity

        if humanoid and humanoid.Health > 0 and hitPart then
            -- Prediction
            local predictedPos = hitPart.Position + (rootVel * Config.Prediction)

            -- Anti-Ground
            if humanoid.FloorMaterial ~= Enum.Material.Air then
                predictedPos = predictedPos + Config.AntiGroundOffset
            end

            -- Camera Lock
            local camPos = Camera.CFrame.Position
            local dir = (predictedPos - camPos).Unit
            local newPos = camPos + dir * 0.12
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(newPos, predictedPos), 0.9)

            -- Air Shoot
            if Config.AirShoot and humanoid.FloorMaterial == Enum.Material.Air then
                local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
                if tool then tool:Activate() end
            end
        else
            camlockEnabled = false
            lockedPlayer = nil
            showNotification("Target died, lock disabled")
        end
    end
end)
