--// Affection Script

--// Config
local Config = {
    Prediction = 0.125,                -- Adjust for ping
    AntiGround = true,                 -- âœ… Toggle Anti-Ground ON/OFF
    Key = "q",                         -- Toggle key as string
    HitPart = "HumanoidRootPart",      -- Part to lock on
    AirShoot = true                    -- Auto shoot in air
}

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

--// Variables
local CamlockState = false
local Target = nil

--// GUI
local affectionGui = Instance.new("ScreenGui")
affectionGui.ResetOnSpawn = false
affectionGui.Name = "AffectionGUI"
affectionGui.Parent = game.CoreGui

local affectionFrame = Instance.new("Frame")
affectionFrame.Size = UDim2.new(0, 180, 0, 70)
affectionFrame.Position = UDim2.new(0.4, 0, 0.4, 0)
affectionFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
affectionFrame.BackgroundTransparency = 0.3
affectionFrame.BorderSizePixel = 0
affectionFrame.Parent = affectionGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 12)
uiCorner.Parent = affectionFrame

local affectionLogo = Instance.new("ImageButton")
affectionLogo.Size = UDim2.new(0, 140, 0, 50)
affectionLogo.Position = UDim2.new(0.1, 0, 0.15, 0)
affectionLogo.BackgroundTransparency = 1
affectionLogo.Image = "rbxassetid://88724352247002"
affectionLogo.Parent = affectionFrame

local logoCorner = Instance.new("UICorner")
logoCorner.CornerRadius = UDim.new(0.2, 0)
logoCorner.Parent = affectionLogo

-- Dragging GUI
local dragging, dragStart, startPos
local function updateInput(input)
    local delta = input.Position - dragStart
    affectionFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

affectionFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = affectionFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateInput(input)
    end
end)

--// Notification System (Your Old One)
local notificationFrame = Instance.new("Frame")
notificationFrame.Size = UDim2.new(0, 180, 1, 0)
notificationFrame.Position = UDim2.new(1, -200, 0, 20)
notificationFrame.BackgroundTransparency = 1
notificationFrame.Parent = affectionGui

local function showNotification(text)
    local note = Instance.new("TextLabel")
    note.Size = UDim2.new(0, 140, 0, 25)
    note.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    note.BackgroundTransparency = 0.5
    note.TextColor3 = Color3.fromRGB(255, 255, 255)
    note.Font = Enum.Font.GothamBold
    note.TextSize = 12
    note.Text = text
    note.TextXAlignment = Enum.TextXAlignment.Center
    note.TextYAlignment = Enum.TextYAlignment.Center
    note.Position = UDim2.new(0, 0, 0, (#notificationFrame:GetChildren() - 1) * 28)
    note.Parent = notificationFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = note

    local blur = Instance.new("UIStroke", note)
    blur.Thickness = 1
    blur.Color = Color3.fromRGB(255, 255, 255)
    blur.Transparency = 0.8

    task.spawn(function()
        wait(1.5)
        for i = 1, 10 do
            note.TextTransparency = i / 10
            note.BackgroundTransparency = 0.5 + (i / 10)
            wait(0.05)
        end
        note:Destroy()
    end)
end

--// Functions
local function FindNearestEnemy()
    local closest, dist = nil, math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(Config.HitPart) then
            local magnitude = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character[Config.HitPart].Position).Magnitude
            if magnitude < dist then
                dist = magnitude
                closest = player
            end
        end
    end
    return closest
end

--// Toggle Function
local function ToggleCamlock()
    CamlockState = not CamlockState
    Target = CamlockState and FindNearestEnemy() or nil
    if CamlockState and Target then
        showNotification("Locked on: " .. Target.Name)
    else
        showNotification("Unlocked")
    end
end

--// Input Listener
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode[Config.Key:upper()] then
        ToggleCamlock()
    end
end)

--// Auto Unlock if LocalPlayer Dies
LocalPlayer.CharacterAdded:Connect(function(char)
    char:WaitForChild("Humanoid").Died:Connect(function()
        CamlockState = false
        Target = nil
        showNotification("Unlocked (You Died)")
    end)
end)

--// Main Loop
RunService.RenderStepped:Connect(function()
    if CamlockState and Target and Target.Character and Target.Character:FindFirstChild(Config.HitPart) then
        local targetPart = Target.Character[Config.HitPart]

        -- Anti-Ground
        if Config.AntiGround then
            local humanoid = Target.Character:FindFirstChild("Humanoid")
            if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                targetPart.Velocity = Vector3.new(targetPart.Velocity.X, targetPart.Velocity.Y * 0.5, targetPart.Velocity.Z)
            end
        end

        -- Prediction
        local predictedPos = targetPart.Position + (targetPart.Velocity * Config.Prediction)
        Camera.CFrame = CFrame.new(Camera.CFrame.Position, predictedPos)
    else
        if CamlockState then
            CamlockState = false
            Target = nil
            showNotification("Unlocked (Target Lost)")
        end
    end
end)
