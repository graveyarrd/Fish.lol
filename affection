--// affection.cc custom version
print("Affection.cc custom version (Prediction + Anti-Ground + Keybind)")

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- CONFIG
local Prediction = 0.125 -- Adjust for ping (0.12-0.16 typical)
local AntiGroundOffset = Vector3.new(0, 2.5, 0)
local ToggleKey = Enum.KeyCode.Q -- Keybind for toggle

--// GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "AffectionLockUI"
gui.Parent = game.CoreGui
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Frame = Instance.new("Frame")
Frame.Parent = gui
Frame.BackgroundTransparency = 1
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.4, 0, 0.4, 0)
Frame.Size = UDim2.new(0, 85, 0, 85)
Frame.Active = true

local UICorner = Instance.new("UICorner")
UICorner.Parent = Frame

local TextButton = Instance.new("TextButton")
TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
TextButton.BackgroundTransparency = 0.3
TextButton.BorderSizePixel = 0
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Text = ""
TextButton.AutoButtonColor = true

local UICorner_2 = Instance.new("UICorner")
UICorner_2.CornerRadius = UDim.new(0, 12)
UICorner_2.Parent = TextButton

-- Dragging system
local dragging = false
local dragStart, startPos

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- Notifications
local notificationFrame = Instance.new("Frame")
notificationFrame.Size = UDim2.new(0, 180, 1, 0)
notificationFrame.Position = UDim2.new(1, -200, 0, 20)
notificationFrame.BackgroundTransparency = 1
notificationFrame.Parent = gui

local function showNotification(text)
    local note = Instance.new("TextLabel")
    note.Size = UDim2.new(0, 140, 0, 25)
    note.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    note.BackgroundTransparency = 0.5
    note.TextColor3 = Color3.fromRGB(255, 255, 255)
    note.Font = Enum.Font.GothamBold
    note.TextSize = 12
    note.Text = text
    note.TextXAlignment = Enum.TextXAlignment.Center
    note.TextYAlignment = Enum.TextYAlignment.Center
    note.Position = UDim2.new(0, 0, 0, (#notificationFrame:GetChildren() - 1) * 28)
    note.Parent = notificationFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = note

    task.spawn(function()
        wait(1.5)
        for i = 1, 10 do
            note.TextTransparency = i / 10
            note.BackgroundTransparency = 0.5 + (i / 10)
            wait(0.05)
        end
        note:Destroy()
    end)
end

showNotification("affection.cc loaded")

-- Camlock Variables
local camlockEnabled = false
local lockedPlayer = nil

-- Function to find closest player
local function getClosestPlayer()
    local closest, shortest = nil, math.huge
    local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local pos, onScreen = Camera:WorldToViewportPoint(p.Character.HumanoidRootPart.Position)
            if onScreen then
                local dist = (Vector2.new(pos.X, pos.Y) - screenCenter).Magnitude
                if dist < 150 and dist < shortest then
                    shortest = dist
                    closest = p
                end
            end
        end
    end

    return closest
end

-- Toggle Function
local function toggleCamlock()
    if not camlockEnabled then
        local target = getClosestPlayer()
        if target then
            camlockEnabled = true
            lockedPlayer = target
            showNotification("Locked onto " .. target.Name)
        else
            showNotification("No player in range")
        end
    else
        camlockEnabled = false
        lockedPlayer = nil
        showNotification("Lock Disabled")
    end
end

-- Button Click
TextButton.MouseButton1Click:Connect(toggleCamlock)

-- Keybind
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == ToggleKey then
        toggleCamlock()
    end
end)

-- Render Loop
RunService.RenderStepped:Connect(function()
    if camlockEnabled and lockedPlayer and lockedPlayer.Character then
        local humanoid = lockedPlayer.Character:FindFirstChildOfClass("Humanoid")
        local hrp = lockedPlayer.Character:FindFirstChild("HumanoidRootPart")
        local rootVel = hrp and hrp.Velocity

        if humanoid and humanoid.Health > 0 and hrp then
            -- Prediction
            local predictedPos = hrp.Position + (rootVel * Prediction)

            -- Anti-Ground Shots
            if humanoid.FloorMaterial ~= Enum.Material.Air then
                predictedPos = predictedPos + AntiGroundOffset
            end

            local camPos = Camera.CFrame.Position
            local dir = (predictedPos - camPos).Unit
            local newPos = camPos + dir * 0.12
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(newPos, predictedPos), 0.9)

            -- Auto Air Fire
            if humanoid.FloorMaterial == Enum.Material.Air then
                local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
                if tool then tool:Activate() end
            end
        else
            camlockEnabled = false
            lockedPlayer = nil
            showNotification("Target lost, lock disabled")
        end
    end
end)
